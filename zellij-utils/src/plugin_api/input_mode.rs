// This file contains conversion code between `InputMode` and `ProtobufInputMode`
// `InputMode` - this is the struct used by both Zellij and Rust plugins
// `ProtobufInputMode` - this is the struct generated by the `.proto` file and used for serialization
// across the wasm boundary
//
// SDK authors in other languages should generate their own equivalent structures based on the
// `.proto` specification, and then decode the protobuf over the wire into them

pub use super::generated_api::api::input_mode::{InputModeMessage as ProtobufInputModeMessage, InputMode as ProtobufInputMode};
use crate::data::InputMode;

use std::convert::TryFrom;

impl TryFrom<ProtobufInputModeMessage> for InputMode {
   type Error = &'static str;
   fn try_from(protobuf_input_mode: ProtobufInputModeMessage) -> Result<Self, &'static str> {
       match ProtobufInputMode::from_i32(protobuf_input_mode.input_mode) {
            Some(ProtobufInputMode::Normal) => Ok(InputMode::Normal),
            Some(ProtobufInputMode::Locked) => Ok(InputMode::Locked),
            Some(ProtobufInputMode::Resize) => Ok(InputMode::Resize),
            Some(ProtobufInputMode::Pane) => Ok(InputMode::Pane),
            Some(ProtobufInputMode::Tab) => Ok(InputMode::Tab),
            Some(ProtobufInputMode::Scroll) => Ok(InputMode::Scroll),
            Some(ProtobufInputMode::EnterSearch) => Ok(InputMode::EnterSearch),
            Some(ProtobufInputMode::Search) => Ok(InputMode::Search),
            Some(ProtobufInputMode::RenameTab) => Ok(InputMode::RenameTab),
            Some(ProtobufInputMode::RenamePane) => Ok(InputMode::RenamePane),
            Some(ProtobufInputMode::Session) => Ok(InputMode::Session),
            Some(ProtobufInputMode::Move) => Ok(InputMode::Move),
            Some(ProtobufInputMode::Prompt) => Ok(InputMode::Prompt),
            Some(ProtobufInputMode::Tmux) => Ok(InputMode::Tmux),
            None => Err("Invalid input mode"),
       }
   }
}

impl TryFrom<InputMode> for ProtobufInputModeMessage {
   type Error = &'static str;
   fn try_from(input_mode: InputMode) -> Result<Self, &'static str> {
       Ok(match input_mode {
            InputMode::Normal => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Normal as i32 },
            InputMode::Locked => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Locked as i32 },
            InputMode::Resize => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Resize as i32 },
            InputMode::Pane => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Pane as i32 },
            InputMode::Tab => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Tab as i32 },
            InputMode::Scroll => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Scroll as i32 },
            InputMode::EnterSearch => ProtobufInputModeMessage { input_mode: ProtobufInputMode::EnterSearch as i32 },
            InputMode::Search => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Search as i32 },
            InputMode::RenameTab => ProtobufInputModeMessage { input_mode: ProtobufInputMode::RenameTab as i32 },
            InputMode::RenamePane => ProtobufInputModeMessage { input_mode: ProtobufInputMode::RenamePane as i32 },
            InputMode::Session => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Session as i32 },
            InputMode::Move => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Move as i32 },
            InputMode::Prompt => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Prompt as i32 },
            InputMode::Tmux => ProtobufInputModeMessage { input_mode: ProtobufInputMode::Tmux as i32 },
       })
   }
}
